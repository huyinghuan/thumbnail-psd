// Generated by CoffeeScript 1.7.1
(function() {
  var covertImageToThumbnail, covertPsdToPng, dealWithPsd, extend, imageList, thumbnail, _async, _fs, _im, _path, _psd;

  _psd = require('psd');

  _im = require('imagemagick');

  _path = require('path');

  _async = require('async');

  _fs = require('fs-extra');

  imageList = {
    'bmp': true,
    'png': true,
    'jpg': true,
    'jpeg': true,
    'gif': true
  };

  extend = function(son, father) {
    var key, value, _results;
    if (!father) {
      return son;
    }
    _results = [];
    for (key in father) {
      value = father[key];
      _results.push(son[key] = value);
    }
    return _results;
  };

  covertImageToThumbnail = function(filePath, savePath, options, next) {
    var opt;
    opt = {
      srcPath: filePath,
      dstPath: savePath,
      width: 100,
      height: 80
    };
    extend(opt, options);
    console.log(opt);
    return _im.resize(opt, function(err, stdout, stderr) {
      if (err) {
        console.log(err);
      }
      if (next) {
        return next(err, filePath);
      }
    });
  };

  covertPsdToPng = function(filePath, savePath, next) {
    var tmpFilePath;
    tmpFilePath = "" + savePath + ".psd.tmp";
    return _psd.open(filePath).then(function(psd) {
      return psd.image.saveAsPng(tmpFilePath);
    }).then(function() {
      return next(null, tmpFilePath, savePath);
    });
  };

  dealWithPsd = function(filePath, savePath, options, cb) {
    var queue;
    queue = [];
    queue.push(function(next) {
      return covertPsdToPng(filePath, savePath, next);
    });
    queue.push(function(filePath, savePath, next) {
      return covertImageToThumbnail(filePath, savePath, options, next);
    });
    queue.push(function(tmpFile, next) {
      return _fs.remove(tmpFile, function(err) {
        return next(err);
      });
    });
    return _async.waterfall(queue, function(err) {
      return cb(err);
    });
  };


  /*
    @filePath 需要转的文件的路径
    @savePath 生成缩略图保存的文件夹路径
    @saveFilename 保存缩略图时的文件名
   */

  thumbnail = function(filePath, savePath, options, cb) {
    var ext;
    if (typeof options === 'function') {
      cb = options;
      options = {};
    }
    ext = _path.extname(filePath).replace('.', '');
    if (ext === 'psd') {
      return dealWithPsd(filePath, savePath, options, cb);
    }
    return covertImageToThumbnail(filePath, savePath, options, cb);
    return cb();
  };

  module.exports = thumbnail;

}).call(this);
